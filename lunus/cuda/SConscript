Import("env", "env_etc")

import os
import libtbx.load_env

Import("env_boost_python_ext")
env_bpl = env_boost_python_ext.Clone()

env_etc.include_registry.append(
    env=env_bpl,
    paths=env_etc.lunus_common_includes + [env_etc.python_include])

if (env_etc.enable_cuda):

  cuda_src = []
  cuda_src.append("lsort.cu")

  env_bpl.Prepend(CPPPATH=[env_etc.boost_adaptbx_include,
    env_etc.boost_include])

  env_bpl['NVCCSHLINKFLAGS'] = ['-shared']

  import SCons
  
  shared_object_builder =\
    Builder\
    (action = '$NVCC -c -o $TARGET $_CPPINCFLAGS $NVCCFLAGS $SOURCES',
     suffix = '.o',
     src_suffix = ['.cu','.cpp'],
     source_scanner = SCons.Scanner.C.CScanner())
  
  shared_library_builder =\
    Builder\
    (action ='$NVCC -o $TARGET $NVCCSHLINKFLAGS $SOURCES $_LIBDIRFLAGS ',
     suffix = '$SHLIBSUFFIX',
     src_suffix = '.o')

  env_bpl['BUILDERS']['cudaSharedLibrary'] = shared_library_builder
  env_bpl['BUILDERS']['cudaSharedLibrary'].add_src_builder(shared_object_builder)

  cuda_lib = env_bpl.cudaSharedLibrary(
    target = "#lib/liblunus_cuda",
    source = cuda_src)

  env.Prepend(LIBS=["liblunus_cuda"])

